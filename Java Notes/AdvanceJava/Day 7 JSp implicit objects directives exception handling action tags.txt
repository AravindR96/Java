	
	Implicit Objects in JSP:

Thease are the objects created by web container not developer implicitely.
We can use these objects on any jsp page.
There are 9 implicit object in JSP.
In Servlet:
	HttpSession session = request.getSession();
		session.setAttribute("","");

	ServletConfig config = getServletConfig();

In JSP Page:
	session.setAttrubute("","");


	request------>HttpServletRequest
	response----->HttpServletResponse

	out---------->PrintWriter
	config------->ServletConfig

	session----> HttpSession
	exception ---->Exception

	application----->ServletContext

	page------>Object
	pageContext -------->PageContext
==========================================================================

Exception Handling in JSP:

Error Handling:

Following are the steps to handle error/exception on jsp page.

step1: Create Error page
This is simple jsp page only. 
having page directive with isErrorPage Attribute.
If we specify isErrorPage="true" then this page acts as error page.

error.jsp
<%@ page isErrorPage="true">
Any Message
exception.getMessage() use in scriptlet

OR

<%= exception %>


Step2:Specify errorpage name created in step1 on logical page.
This will be get done by using page directive with errorPage attribute.
On errorPage we can specify error page name. So as some error or exception get raised
on perticular jsp page it automatically execute the error page.

<%@ page errorPage="error.jsp">

<%= 10/0 %>

JSP Directives:

1. Page Directive
2. Include Directive
3. TagLib Directive

	<%@ directiveName attributes="value" .....%>



2. Include Directive:

It is used to include the content of other resources.
The other resources can jsp file,html file or it can any text file.
It includes the content at translation time. The tranlation can be done only once
hence the static resouces content should be included by using inculde directive.
header or footer can be added or included using this directive.

	<%@ include file="resourceName" %>


	<%@ include file="header.html" %>

	<%@ include file="footer.jsp" %>







3. TagLib Directive:

TagLib---> Tag Library

This directive is used to include tag library in current jsp page.
The tag library can standard library from JSTL or User defined library or custom 
library.

<%@ taglib uri="mytags" prefix="m"%>

<m:niteen/>----------------> Welcome NiteenSir

	JSP Actions Tags:

These are the predefined functions or methods used to perform specific task.
These are used at runtime not translation.

<jsp:tagname attribute="value" .../>

	jsp:include: It is used to include the resource at runtime in current jsp page.
	<jsp:include page="resource">

	</jsp:include>
	jsp:forward: It is used to forward request to other resource at runtime.

	<jsp:forward page="resource">

	</jsp:forward>
	jsp:param: It is used to pass parametres in name value pair while
forwarding or including the request. That means it is used with include and forward actions tags
		<jsp:forward page="resource">
			<jsp:param name="anyName" value="anyValue" />
		</jsp:forward>
		<jsp:include page="resource">
			<jsp:param name="anyName" value="anyValue" />
		</jsp:include>

The content specified in param action tag can retrive in specified target resource
using request.getParameter("name") method.

	jsp:useBean: It is used to create object of bean class in jsp

	Bean Class:
	public class EmployeeBean{
		private int eid;
		private String ename;
		private double salary;
		//public getter and setter
		//Zero Argument COnstructor
		
	}

	jsp:setProperty
	jsp:getProperty

	jsp:plugin---> It is used to add component like applet in jsp
	jsp:fallback---> It is used to display message.It is used with jsp:plugin



















































	