
	Two Dimensional Array:

	Matrix reprsentation of array is nothing but 2-D Array.
	Where Array is devided into horizontal and vertical lines.
	All horizontal lines are called as rows
	And All vertical lines are called as columns
	Row index and Column index start from zero hence last row an column
index is m-1 and n-1 resp. where m is number of rows and n is number columns 
and array m*n dimension.

	Steps of using 2-D Array:

Step1: Declaration of Array:

<Data Type> arrayName[][];

String names[][];

Step2: Memory Allocation:

arrayName = new <Data Type>[m][n];
names = new String[3][4];

Both Step1 and Step2 con be done together:

<Data Type> arrayName[][] = new <Data Type>[rowSize][columnSize];
String names[][] = new String[3][4];


Step3: Accessing elements:

To access elements we have to use arrayName with row and column index.

arrayName[rowIndex][columnIndex] = value;

names[0][0] = "Ram";
names[0][1] = "Sham";
names[0][2] = "Jam";
names[0][3] = "Tam";

names[1][0] = "Asha";
names[1][1] = "Nisha";
names[1][2] = "Disha";
names[1][3] = "Usha";
---
---
So on
	names.length====> Total number of rows
	names[0].length===>Total number of columns for first row
		Here All row have same columns

	for(int i = 0; i < names.length;i++){
		for(int j=0; j< names[0].length;j++){
			sop(names[i][j]);
		}
		sopln("");

	}

==============================================
	Jagged Array:
It is 2-D array in which each row can have different number of columns.
	0	10  20  30
	1	40  50  60 70 80 90
	2	100 
	3	110 120
		0   1   2   3  4  5


Steps of Using Jagged Array:

Step1: Declaration
int num[][];

Step2: Memory allocation
num = new int[3][];
Here dont have to specify column size.

Step3: Memory allocation for columns of each row
arrayName[0] = new <Data Type>[n1]
arrayName[1] = new <Data Type>[n2]
arrayName[2] = new <Data Type>[n3]

num[0] = new int[3];
num[1] = new int[6];
num[2] = new int[1];
num[3] = new int[2];

Step4: Accessing elements
We use array with index

num[0][0] = 10;
num[0][1] = 20;
num[0][2] = 30;

num[1][0] = 40;
num[1][1] = 50;
num[1][2] = 60;
num[1][3] = 70;
num[1][4] = 80;
num[1][5] = 90;

num[2][0] = 100;

num[3][0] = 110;
num[3][1] = 120;

for(int i = 0 ; i<num.length;i++){
	for(int j=0; j<num[i].length;j++){
		System.out.print(num[i][j]);
	}
	System.out.println("");
}


Arrays: Present in java.util package















